// <auto-generated />
using EFCore.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Repo.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    [Migration("20200707090806_002")]
    partial class _002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.Domain.Empresa", b =>
                {
                    b.Property<int>("EmpCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<string>("EmpCpfCnpj")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("EmpFan")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("EmpRaz")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("EmpSts")
                        .HasColumnType("VARCHAR(1)")
                        .HasMaxLength(1);

                    b.HasKey("EmpCod");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("EFCore.Domain.Filial", b =>
                {
                    b.Property<int>("FilCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<int>("EmpCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<string>("FilFan")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("FilRaz")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.HasKey("FilCod");

                    b.HasIndex("EmpCod");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("EFCore.Domain.Pessoa", b =>
                {
                    b.Property<int>("PesCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<int>("EmpCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<string>("PesCpfCnpj")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("PesFan")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("PesRaz")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("PesSts")
                        .HasColumnType("VARCHAR(1)")
                        .HasMaxLength(1);

                    b.HasKey("PesCod");

                    b.HasIndex("EmpCod");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("EFCore.Domain.Produto", b =>
                {
                    b.Property<int>("ProCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<int>("EmpCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<string>("ProNcm")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProNom")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("ProObs")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProSts")
                        .HasColumnType("VARCHAR(1)")
                        .HasMaxLength(1);

                    b.HasKey("ProCod");

                    b.HasIndex("EmpCod");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("EFCore.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<string>("UsuNom")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("UsuSts")
                        .HasColumnType("VARCHAR(1)")
                        .HasMaxLength(1);

                    b.Property<string>("UsuTip")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("UsuCod");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EFCore.Domain.UsuarioEmpresas", b =>
                {
                    b.Property<int>("UsuCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<int>("EmpCod")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.HasKey("UsuCod");

                    b.HasIndex("EmpCod");

                    b.ToTable("UsuarioEmpresas");
                });

            modelBuilder.Entity("EFCore.Domain.Filial", b =>
                {
                    b.HasOne("EFCore.Domain.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("EmpCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Domain.Pessoa", b =>
                {
                    b.HasOne("EFCore.Domain.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("EmpCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Domain.Produto", b =>
                {
                    b.HasOne("EFCore.Domain.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("EmpCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Domain.UsuarioEmpresas", b =>
                {
                    b.HasOne("EFCore.Domain.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("EmpCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
